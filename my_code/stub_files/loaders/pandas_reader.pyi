from _typeshed import Incomplete
from pandas import DataFrame
from pandasai import SmartDataframe
from typing import Any, Callable

def check_suffix(valid_suffixs: list[str]) -> Callable: ...

class PandasReader:
    config: Incomplete
    def __init__(self, config: dict[str, Any] | None = None) -> None: ...
    def load(self, data: DataFrame | str, *args: Any, **kwargs: dict[str, Any]) -> DataFrame | SmartDataframe: ...
    def read_csv(self, file_path: str, *args: Any, **kwargs: dict[str, Any]) -> DataFrame: ...
    def read_excel(self, file_path: str, *args: Any, **kwargs: dict[str, Any]) -> DataFrame: ...
    def read_json(self, file_path: str, *args: Any, **kwargs: dict[str, Any]) -> DataFrame: ...
    def read_parquet(self, file_path: str, *args: Any, **kwargs: dict[str, Any]) -> DataFrame: ...
    def read_sql(self, *args: Any, **kwargs: dict[str, Any]) -> DataFrame: ...
    def read_table(self, file_path: str, *args: Any, **kwargs: dict[str, Any]) -> DataFrame: ...
    def read_clipboard(self, *args: Any, **kwargs: dict[str, Any]) -> DataFrame: ...
    def read_html(self, file_path: str, *args: Any, **kwargs: dict[str, Any]) -> DataFrame: ...
    def read_feather(self, file_path: str, *args: Any, **kwargs: dict[str, Any]) -> DataFrame: ...
    def read_stata(self, file_path: str, *args: Any, **kwargs: dict[str, Any]) -> DataFrame: ...
    def read_sas(self, file_path: str, *args: Any, **kwargs: dict[str, Any]) -> DataFrame: ...
    def read_pickle(self, file_path: str, *args: Any, **kwargs: dict[str, Any]) -> DataFrame: ...
    def read_hdf(self, file_path: str, *args: Any, **kwargs: dict[str, Any]) -> DataFrame: ...
    def read_orc(self, file_path: str, *args: Any, **kwargs: dict[str, Any]) -> DataFrame: ...
