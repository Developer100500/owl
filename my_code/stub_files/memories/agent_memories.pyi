from _typeshed import Incomplete
from camel.memories.base import AgentMemory, BaseContextCreator
from camel.memories.blocks import ChatHistoryBlock, VectorDBBlock
from camel.memories.records import ContextRecord as ContextRecord, MemoryRecord as MemoryRecord
from camel.storages.key_value_storages.base import BaseKeyValueStorage as BaseKeyValueStorage
from camel.storages.vectordb_storages.base import BaseVectorStorage as BaseVectorStorage

class ChatHistoryMemory(AgentMemory):
    def __init__(self, context_creator: BaseContextCreator, storage: BaseKeyValueStorage | None = None, window_size: int | None = None, agent_id: str | None = None) -> None: ...
    @property
    def agent_id(self) -> str | None: ...
    @agent_id.setter
    def agent_id(self, val: str | None) -> None: ...
    def retrieve(self) -> list[ContextRecord]: ...
    def write_records(self, records: list[MemoryRecord]) -> None: ...
    def get_context_creator(self) -> BaseContextCreator: ...
    def clear(self) -> None: ...

class VectorDBMemory(AgentMemory):
    def __init__(self, context_creator: BaseContextCreator, storage: BaseVectorStorage | None = None, retrieve_limit: int = 3, agent_id: str | None = None) -> None: ...
    @property
    def agent_id(self) -> str | None: ...
    @agent_id.setter
    def agent_id(self, val: str | None) -> None: ...
    def retrieve(self) -> list[ContextRecord]: ...
    def write_records(self, records: list[MemoryRecord]) -> None: ...
    def get_context_creator(self) -> BaseContextCreator: ...
    def clear(self) -> None: ...

class LongtermAgentMemory(AgentMemory):
    chat_history_block: Incomplete
    vector_db_block: Incomplete
    retrieve_limit: Incomplete
    def __init__(self, context_creator: BaseContextCreator, chat_history_block: ChatHistoryBlock | None = None, vector_db_block: VectorDBBlock | None = None, retrieve_limit: int = 3, agent_id: str | None = None) -> None: ...
    @property
    def agent_id(self) -> str | None: ...
    @agent_id.setter
    def agent_id(self, val: str | None) -> None: ...
    def get_context_creator(self) -> BaseContextCreator: ...
    def retrieve(self) -> list[ContextRecord]: ...
    def write_records(self, records: list[MemoryRecord]) -> None: ...
    def clear(self) -> None: ...
