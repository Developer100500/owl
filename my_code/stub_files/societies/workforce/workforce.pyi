from _typeshed import Incomplete
from camel.agents import ChatAgent
from camel.societies.workforce.base import BaseNode
from camel.societies.workforce.task_channel import TaskChannel
from camel.tasks.task import Task

logger: Incomplete

class Workforce(BaseNode):
    new_worker_agent_kwargs: Incomplete
    coordinator_agent: Incomplete
    task_agent: Incomplete
    def __init__(self, description: str, children: list[BaseNode] | None = None, coordinator_agent_kwargs: dict | None = None, task_agent_kwargs: dict | None = None, new_worker_agent_kwargs: dict | None = None) -> None: ...
    def process_task(self, task: Task) -> Task: ...
    def add_single_agent_worker(self, description: str, worker: ChatAgent) -> Workforce: ...
    def add_role_playing_worker(self, description: str, assistant_role_name: str, user_role_name: str, assistant_agent_kwargs: dict | None = None, user_agent_kwargs: dict | None = None, chat_turn_limit: int = 3) -> Workforce: ...
    def add_workforce(self, workforce: Workforce) -> Workforce: ...
    def reset(self) -> None: ...
    def set_channel(self, channel: TaskChannel) -> None: ...
    async def start(self) -> None: ...
    def stop(self) -> None: ...
