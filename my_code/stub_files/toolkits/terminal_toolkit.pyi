from _typeshed import Incomplete
from camel.toolkits.base import BaseToolkit
from camel.toolkits.function_tool import FunctionTool
from queue import Queue
from typing import Any

logger: Incomplete

class TerminalToolkit(BaseToolkit):
    shell_sessions: Incomplete
    os_type: Incomplete
    output_queue: Queue[str]
    agent_queue: Queue[str]
    terminal_ready: Incomplete
    gui_thread: Incomplete
    safe_mode: Incomplete
    cloned_env_path: Incomplete
    use_shell_mode: Incomplete
    python_executable: Incomplete
    is_macos: Incomplete
    working_dir: Incomplete
    def __init__(self, timeout: float | None = None, shell_sessions: dict[str, Any] | None = None, working_dir: str = './workspace', need_terminal: bool = True, use_shell_mode: bool = True, clone_current_env: bool = False, safe_mode: bool = True) -> None: ...
    def file_find_in_content(self, file: str, regex: str, sudo: bool = False) -> str: ...
    def file_find_by_name(self, path: str, glob: str) -> str: ...
    def shell_exec(self, id: str, command: str) -> str: ...
    def shell_view(self, id: str) -> str: ...
    def shell_wait(self, id: str, seconds: int | None = None) -> str: ...
    def shell_write_to_process(self, id: str, input: str, press_enter: bool) -> str: ...
    def shell_kill_process(self, id: str) -> str: ...
    def __del__(self) -> None: ...
    def get_tools(self) -> list[FunctionTool]: ...
