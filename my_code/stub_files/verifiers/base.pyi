from .models import VerificationResult
from _typeshed import Incomplete
from abc import ABC
from camel.extractors.base import BaseExtractor as BaseExtractor

logger: Incomplete

class BaseVerifier(ABC):
    extractor: Incomplete
    def __init__(self, extractor: BaseExtractor | None = None, max_parallel: int | None = None, timeout: float | None = None, max_retries: int = 3, retry_delay: float = 1.0, initial_batch_size: int | None = None, cpu_threshold: float = 80.0, memory_threshold: float = 85.0, **kwargs) -> None: ...
    async def setup(self, **kwargs) -> None: ...
    async def cleanup(self) -> None: ...
    async def verify(self, solution: str, reference_answer: str | None) -> VerificationResult: ...
    async def verify_batch(self, solutions: list[str], reference_answers: list[str | None], raise_on_error: bool = False) -> list[VerificationResult]: ...
